{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 PyCharm CE seems to be a pretty good IDL for python.\

\f1\b0 \
- It is easy to format code to a standard style.\
- It has extensive refactoring capabilities.\
- It is easy to run and debug test scripts within a project. (e.g. the example scripts).\
- It interfaces with repositories.\
- It can use specific conda/virtual env sandbox environments.\
\

\f0\b Style Preferences:\

\f1\b0 - To keep the code style consistent I use the [Code > Reformat Code] command\
- However I have two custom style preferences to keep it more readable for me\
- Under [Preferences > Editor > Code Style > Python > Spaces > Around Operators]\
  uncheck \'93Multiplicative operators\'94 and \'93Power operator\'94\
\

\f0\b Refactoring:\

\f1\b0 - Probably my favorite feature is the \'93refactor\'94 command.\
- This lets you move and rename files within the project and it will automatically update\
  instances where the file/module is used in other files/modules.\
- The same is true for variables \'97> it is easy to change you mind/clean up things later.\
\

\f0\b Console: Running/Debugging:\

\f1\b0 - another great feature is the \'93Python Console\'94\
- basically it is ipython inside Pycharm\
- you can execute selected code (right click \'93Execute Selection in Python Console\'94) to try things incrementally.\
- You can also assign keyboard shortcuts to console functions to make it easier.\
}